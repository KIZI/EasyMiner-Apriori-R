{{!
@param String         jdbcDriverAbsolutePath
@param String         dbServer
@param String         dbName
@param String         dbUser
@param String         dbPassword
@param String         dbTableName
@param String         selectQuery
@param Double         confidence
@param Double         support
@param String         consequent
}}
library(RJDBC)
library(arules)

# load data from mysql
drv <- JDBC("com.mysql.jdbc.Driver", list.files("{{jdbcDriverAbsolutePath}}", pattern="jar$",full.names=T))
con <- dbConnect(drv, "jdbc:mysql://{{{dbServer}}}:3306/{{{dbName}}}?characterEncoding=utf8", "{{{dbUser}}}", "{{{dbPassword}}}")
train <- dbGetQuery(con, "SELECT {{{selectQuery}}} FROM {{{dbTableName}}}")
dbDisconnect(con)

# normalize data
train <- sapply(train,as.factor)
train <- data.frame(train, check.names=F)

# arules processing
txns <- as(train,"transactions")
rules <- apriori(txns, parameter = list(confidence = {{{confidence}}}, support = {{{support}}}{{#lift}}, lift = {{{lift}}}{{/lift}}), appearance = list(rhs = c({{{consequent}}}), default="lhs"))
rules <- as(rules,"data.frame")
options(width=10000)
capture.output(print(rules))